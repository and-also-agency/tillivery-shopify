{% paginate collection.products by 500 %}

<div data-section-id="{{ section.id }}" data-section-type="collection-template">

  <div id="shopify-section-1492143466948" class="shopify-section index-section index-section--flush">
    <div class="hero hero--large hero__overlay">
      <div class="hero__inner">
        <div class="page-width text-center">

          <img src="{{'masthead__a-la-carte-text.png' | asset_url}}" width="480px" style="margin-top:40px;" alt="Start your order">
          {% if customer %}
          <div class="rte-setting mega-subtitle">
            <p>Pick and choose your items, such as entr√©es, soups, salads, appetizers & baked goods, with a minimum order of $49.99/week.</p>
            <ul>
              <li class="material-icons" style="letter-spacing:-17px;">star_ratestar_ratestar_ratestar_rate</li>
            </ul>
          </div>
          {% else %}
          {% endif %} 
        </div>
      </div>
    </div>
  </div>

  <div class="menu--alacarte">
    <ul>
      {% for link in linklists.a-la-carte.links %}
      {% if collection and collection.handle == link.handle %}
<!--       <li class="active"><span>{{ link.title }}</span></li> -->
      <li><a href="{{ link.url }}">{{ link.title }}</a></li>
      {% else %}
      <li><a href="{{ link.url }}">{{ link.title }}</a></li>
      {% endif %}
      {% endfor %}
    </ul>
  </div>


  <div class="page-width" id="Collection">
    <div class="grid">
      <div class="grid__item medium-up--one-whole">
        <div class="section-header text-center">
          <h1>{{ collection.title }}</h1>
          {% unless customer %}<p class="login-warning">You must be logged in to order. <a href="/account/login">Login</a> Don't have an account? <a href="/pages/signup">Sign Up</a></p>{% endunless %}
        </div>
      </div>

      <div class="grid__item medium-up--one-whole">

        <ul class="collection-filters text-center clearfix">
          <li class="expository">Filter:</li>
          <li{% unless current_tags %} class="active"{% endunless %}>
            {% if collection.handle %}
            <a href="/collections/{{ collection.handle }}{% if collection.sort_by %}?sort_by={{ collection.sort_by }}{% endif %}">All</a>
            {% elsif collection.current_type %}
            <a href="{{ collection.current_type | url_for_type | sort_by: collection.sort_by }}">All</a>
            {% elsif collection.current_vendor %}
            <a href="{{ collection.current_vendor | url_for_vendor | sort_by: collection.sort_by }}">All</a>
            {% endif %}
          </li>
          {% for tag in collection.all_tags %}
          {% if current_tags contains tag %}
          <li class="active">
            {{ tag | link_to_remove_tag: tag }}
          </li>
          {% else %}
          <li>
            {{ tag | link_to_tag: tag }}
          </li>
          {% endif %}
          {% endfor %}
        </ul> 
      </div>

      <div class="grid__item medium-up--one-whole">
        <div class="flex-row">
          {% for product in collection.products %}
          {% assign variant = product.selected_or_first_available_variant %}
          <div class="flex-col flex-col--33 a-la-carte">
            <div class="menu-card">
              <div class="menu-card__img box" style="background: url({{ product | img_url: '765x600' }}) center center/cover no-repeat;">
                <div class="menu-modal__toggle">
                  <a data-remodal-target="modal-{{ forloop.index }}"><i class="fa fa-info-circle"></i></a>
                </div>
                <div class="dietary-tags">
                  {% if product.tags contains 'Vegetarian' %}
                  <div class="tag--veg">Veg</div>
                  {% endif %}
                  {% if product.tags contains 'Gluten Free' %}
                  <div class="tag--gf">Gf</div>
                  {% endif %}
                  {% if product.tags contains 'Vegan' %}
                  <div class="tag--vegan">Vegan</div>
                  {% endif %}   
                  {% if product.tags contains 'Dairy Free' %}
                  <div class="tag--df">Df</div>
                  {% endif %}             
                </div> 
              </div>
              <div class="menu-card__body">
                <h4 class="product-title">{{ product.title }}</h4>
                <p class="menu-card__price">{{ product.price | money }}</p>
                <p>{{ product.description }}</p>
                <div class="menu-card__actions">
                  <input min="1" type="number" id="quantity" name="quantity" value="1" />
                  <div class="btn btn-alacarte-item {% unless customer %}disabled{% endunless %}" data-id="{{variant.id}}">
                    <span>Add To Order</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="remodal" data-remodal-id="modal-{{ forloop.index }}">
            <div class="remodal__header" style="background: linear-gradient(rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.15)), url({{ product | img_url: '700x600' }}) center center / cover no-repeat;">
              <div>
                <h4 class="modal-product-title product-title">{{ product.title }}</h4>
                <p><em>{{ product.price | money }}</em></p>
                <div class="dietary-tags">
                  {% if product.tags contains 'Vegetarian' %}
                  <div class="tag--veg">Veg</div>
                  {% endif %}
                  {% if product.tags contains 'Gluten Free' %}
                  <div class="tag--gf">Gf</div>
                  {% endif %}
                  {% if product.tags contains 'Vegan' %}
                  <div class="tag--vegan">Vegan</div>
                  {% endif %}   
                  {% if product.tags contains 'Dairy Free' %}
                  <div class="tag--df">Df</div>
                  {% endif %}             
                </div> 
              </div>
            </div>
            <div class="remodal__content">
              <button data-remodal-action="close" class="remodal-close"></button>
              <div class="flex-col flex-col--50">
                <p>{{ product.description }}</p>
                <input min="1" type="number" id="quantity" name="quantity" value="1" />
                <div class="btn btn-modal {% unless customer %}disabled{% endunless %}" data-id="{{variant.id}}">
                  <span>Add To Order</span>
                </div>
              </div>
              <div class="flex-col flex-col--50">
                <p class="ingredients">Ingredients:</p>
                <p>{{ product.metafields.c_f.product_ingredients }}</p>
              </div>                
            </div>
          </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>

  {% if is_empty_collection %}
  <div class="grid__item small--text-center">
    <p class="text-center">{{ 'collections.general.no_matches' | t }}</p>
  </div>
  {% endif %}

  {% if paginate.pages > 1 %}
  {% include 'pagination' %}
  {% endif %}

</div>

<script type="text/javascript">  
  
  $(function() {
    
    scrollNav = function (menu) {
      
      var path = window.location.pathname;
      path = path.replace(/\/$/, "");
      path = decodeURIComponent(path);
      menu = $('.menu--alacarte');

      $('.menu--alacarte a').each(function () {
        var href = $(this).attr('href');
        href = href.split(/[?#]/)[0];
        if (path.substring(0, href.length) === href) {
          console.log("hit!");
          $(this).addClass('menu-item--current');
          var currentMenuItem = $(this);
          var myScrollPos = currentMenuItem.offset().left + currentMenuItem.outerWidth(true)/2 + menu.scrollLeft() - menu.width()/2;
          menu.scrollLeft(myScrollPos);          
        }
      });
    };    

    var scrollMenu = $('.menu--alacarte');
    scrollNav(scrollMenu);

    updateCart = function (button, title, quantity, data) {

      var dataJS = eval(data);
      var currentItems = dataJS['items'];
      var variants_to_update = {};
      var variant_id = button.data('id');
      var button_text = button.find('span');
      var product_title = title;
      var match;
      var currentQuant = 0;
      var notification = function() {
        $('.added-product').text(product_title);
        $('.added-notification').toggleClass('open');
        setTimeout(function() { $('.added-notification').toggleClass('open'); }, 3000);
      }

      //         Check if added item is already in the cart
      for (var i = 0; i < currentItems.length; i++) {
        if (currentItems[i].variant_id == variant_id) {
          match = currentItems[i];
          currentQuant = match['quantity'];      
        }
      }

      //         Add the product and the quantity
      var variant_quantity = quantity + currentQuant;
      variants_to_update[variant_id] = variant_quantity;

      //         Add to the cart
      jQuery.ajax({
        type: 'POST',
        async: true,
        context: this,
        url: '/cart/update.js',
        data: JSON.stringify({
          updates: variants_to_update
        }),
        dataType: 'json',
        contentType: 'application/json; charset=utf-8',
        beforeSend: function(){
          button_text.text('');
          $('.btn-alacarte-item').css({
            'pointer-events' : 'none',
            'background' : '#c4c4c5'
          });
          button.append('<div class="loader">Loading...</div>');
        },
        success: function () {
          $.getJSON('/cart.js', function(cart) {
            if ($('#CartCount').length == 0) {
              $('.site-header__cart .icon__fallback-text').after('<div id="CartCount" class="site-header__cart-count"><span>' + cart.item_count + '</span></div>');
            } else {
              $('#CartCount').find('span').text(cart.item_count);
            }
          });
          notification();
          setTimeout(function(){
            $('.loader').fadeOut(400, function() {
              $('.loader').remove();
              button.css('background','#8ec430');
              button_text
              .hide()
              .html('<i class="fa fa-check"></i>')
              .fadeIn(400)
              .delay(1400)
              .fadeOut(400)
              .queue(function() {
                $(button).find('i').remove().dequeue();
                $(button_text).hide().dequeue();
                $(button_text).text('Add to Order').dequeue();
                $(button_text).fadeIn(400);                  
              });
              $('.btn-alacarte-item').css({
                'pointer-events' : 'auto',
                'background' : '#8ec430'
              });
            });
          }, 1500);          
        },
        error: function (err) {}
      });         
    };

    //       When the button is clicked
    $('.btn-alacarte-item').on('click', function(e) {
      e.preventDefault();
      if($(this).hasClass('disabled')) {
        $('.error-notification').toggleClass('open');
        setTimeout(function() { $('.error-notification').toggleClass('open'); }, 5000);
        return;
      }
      var clicked = $(this);
      var product_title = $(this).closest('.menu-card__body').find('.product-title').text();
      var quantity = parseInt($(this).siblings('#quantity').val());

      //         Get the current cart
      jQuery.ajax({
        type: 'GET',
        async: true,
        dataType: 'json',
        url: '/cart.js',
        success: function(data){
          var response = data;
          updateCart(clicked, product_title, quantity, response);
        },
        error: function () {
        }
      });
      return false;
    });

    //       When the modal button is clicked
    $('.btn-modal').on('click', function(e) {
      e.preventDefault();
      if($(this).hasClass('disabled')) {
        $('.error-notification').toggleClass('open');
        setTimeout(function() { $('.error-notification').toggleClass('open'); }, 5000);
        return;
      }      
      var clicked = $(this);
      var product_title = $(this).closest('.remodal').find('.modal-product-title').text();
      console.log(product_title);
      var quantity = parseInt($(this).siblings('#quantity').val());

      //         Get the current cart
      jQuery.ajax({
        type: 'GET',
        async: true,
        dataType: 'json',
        url: '/cart.js',
        success: function(data){
          var response = data;
          updateCart(clicked, product_title, quantity, response);
        },
        error: function () {
        }
      });
      return false;
    });      
  });

</script>

{% endpaginate %}

{% schema %}
{
"name": "Collection pages",
"settings": [
{
"type": "select",
"id": "layout",
"label": "Layout",
"default": "grid",
"options": [
{
"value": "grid",
"label": "Grid"
},
{
"value": "list",
"label": "List"
}
]
},
{
"type": "select",
"id": "grid",
"label": "Products per row (grid only)",
"default": "4",
"options": [
{
"value": "2",
"label": "2"
},
{
"value": "3",
"label": "3"
},
{
"value": "4",
"label": "4"
},
{
"value": "5",
"label": "5"
}
]
},
{
"type": "select",
"id": "rows",
"label": "Rows per page (grid only)",
"default": "2",
"options": [
{
"value": "2",
"label": "2"
},
{
"value": "3",
"label": "3"
},
{
"value": "4",
"label": "4"
},
{
"value": "5",
"label": "5"
},
{
"value": "6",
"label": "6"
},
{
"value": "7",
"label": "7"
},
{
"value": "8",
"label": "8"
},
{
"value": "9",
"label": "9"
}
]
},
{
"type": "checkbox",
"id": "show_collection_image",
"label": "Show collection image",
"default": true
},
{
"type": "checkbox",
"id": "show_vendor",
"label": "Show product vendors",
"default": false
},
{
"type": "checkbox",
"id": "sort_enable",
"label": "Enable sorting",
"default": true
},
{
"type": "checkbox",
"id": "tags_enable",
"label": "Enable tag filtering",
"default": true
}
]
}
{% endschema %}

